[1/12] Building C object esp-idf/test/CMakeFiles/__idf_test.dir/button_test.c.obj
[2/12] Performing build step for 'bootloader'
[1/1] cd /home/sangko/esp32_dev/esp-test/my-test/idf_t250702_oled_menu_design_from0to1/build/bootloader/esp-idf/esptool_py && /home/sangko/.espressif/python_env/idf5.2_py3.8_env/bin/python /home/sangko/esp32_dev/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 /home/sangko/esp32_dev/esp-test/my-test/idf_t250702_oled_menu_design_from0to1/build/bootloader/bootloader.bin
Bootloader binary size 0x6850 bytes. 0x7b0 bytes (7%) free.
[3/10] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/main.c.obj
[4/10] Linking C static library esp-idf/test/libtest.a
[5/10] Linking C static library esp-idf/main/libmain.a
[6/10] Generating ld/sections.ld
[7/10] Building C object CMakeFiles/idf_t250702_oled_menu_design_from0to1.elf.dir/project_elf_src_esp32.c.obj
[8/10] Linking CXX executable idf_t250702_oled_menu_design_from0to1.elf
[9/10] Generating binary image from built executable
esptool.py v4.9.0
Creating esp32 image...
Merged 2 ELF sections
Successfully created esp32 image.
Generated /home/sangko/esp32_dev/esp-test/my-test/idf_t250702_oled_menu_design_from0to1/build/idf_t250702_oled_menu_design_from0to1.bin
[10/10] cd /home/sangko/esp32_dev/esp-test/my-test/idf_t250702_oled_menu_design_from0to1/build/esp-idf/esptool_py && /home/sangko/.espressif/python_env/idf5.2_py3.8_env/bin/python /home/sangko/esp32_dev/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /home/sangko/esp32_dev/esp-test/my-test/idf_t250702_oled_menu_design_from0to1/build/partition_table/partition-table.bin /home/sangko/esp32_dev/esp-test/my-test/idf_t250702_oled_menu_design_from0to1/build/idf_t250702_oled_menu_design_from0to1.bin
idf_t250702_oled_menu_design_from0to1.bin binary size 0x2dc50 bytes. Smallest app partition is 0x100000 bytes. 0xd23b0 bytes (82%) free.
